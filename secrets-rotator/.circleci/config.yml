version: 2.1

executors:
  node-executor:
    docker:
      - image: cimg/node:14.17.6

commands:
  notify-google-chat:
    description: "Notify google chat on job status"
    parameters:
      notify_success:
        default: false
        type: boolean
    steps:
      - run:
          name: "Set GIT_COMMIT_MESSAGE"
          when: always
          command: echo 'export GIT_COMMIT_MESSAGE="$(git log --format=%B -n 1 $CIRCLE_SHA1)"' >> $BASH_ENV
      - run:
          name: Chat Notification Fail
          when: on_fail
          command: >
            curl --header "Content-Type: application/json"
            --request POST
            --data "{\"cards\":[{\"header\":{\"title\":\"Secrets Rotation Automation - Oops. ${CIRCLE_JOB} failed.\",\"imageUrl\":\"https://png.pngtree.com/svg/20170406/icon_failed__1325447.png\",\"imageStyle\":\"IMAGE\"},\"sections\":[{\"widgets\":[{\"keyValue\":{\"content\":\"${GIT_COMMIT_MESSAGE}\",\"contentMultiline\":\"true\",\"onClick\": {\"openLink\": {\"url\": \"${CIRCLE_BUILD_URL}/\"}}}}]}]}],\"thread\":{\"name\":\"spaces/AAAA0BF8CP4/threads/bGDnR4-DnPM\"}}"
            $CHAT_WEBHOOK_URL
      - run:
          name: Chat Notification Success
          when: on_success
          command: >
            if [ << parameters.notify_success >> == true ]; then
              curl --header "Content-Type: application/json" --request POST --data "{\"cards\":[{\"header\":{\"title\":\"Secrets Rotation Automation - ${CIRCLE_JOB} successful.\",\"imageUrl\":\"https://png.pngtree.com/svg/20170510/success_404253.png\",\"imageStyle\":\"IMAGE\"},\"sections\":[{\"widgets\":[{\"keyValue\":{\"content\":\"${GIT_COMMIT_MESSAGE}\",\"contentMultiline\":\"true\",\"onClick\": {\"openLink\": {\"url\": \"${CIRCLE_BUILD_URL}/\"}}}}]}]}],\"thread\":{\"name\":\"spaces/AAAA0BF8CP4/threads/bGDnR4-DnPM\"}}" $CHAT_WEBHOOK_URL
            fi

  install-yarn:
    description: "Install Yarn in Machine"
    steps:
      - run:
          name: Install yarn
          command: |
            source /opt/circleci/.nvm/nvm.sh
            npm config delete prefix
            nvm install 14.18.0
            nvm alias default 14.18.0
            curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
            echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
            sudo apt-get update && sudo apt-get install yarn
            # set node version in each job. This doesn't set it for the job.

  repository-cache:
    description: "Git repository cache"
    steps:
      - restore_cache:
          keys:
            - source-v1-{{ .Branch }}-{{ .Revision }}
      - checkout:
          path: ~/repo
      - save_cache:
          key: source-v1-{{ .Branch }}-{{ .Revision }}
          paths:
            - ".git"

  dependency-cache:
    description: "Adding node modules cache"
    parameters:
      linux_env:
        default: false
        type: boolean
    steps:
      - restore_cache:
          keys:
            - node-v1-{{ checksum "package.json" }}
      - run:
          name: Install Dependency
          command: |
            set +e
            if [ << parameters.linux_env >> == true ]; then
                source /opt/circleci/.nvm/nvm.sh && nvm use default
            fi
            yarn install
      - save_cache:
          key: node-v1-{{ checksum "package.json" }}
          paths:
            - ./node_modules

jobs:
  whispers-secret-scan:
    docker:
      - image: cimg/python:3.10
    working_directory: ~/repo
    steps:
      - checkout:
          path: ~/repo
      - run:
          name: "secret scan"
          command: |
            pip3 install whispers==2.0.4
            bash ./ci/whispers/run-secrets-scan.sh
      - store_artifacts:
          path: ./whispers-findings.out
      - notify-google-chat

  integration-test:
    machine:
      image: ubuntu-2004:202010-01
    working_directory: ~/repo
    steps:
      - repository-cache
      - install-yarn
      - dependency-cache:
          linux_env: true
      - attach_workspace:
          at: ~/repo
      - run:
          name: Integration Test
          command: |
            set +e
            source /opt/circleci/.nvm/nvm.sh && nvm use default
            source ./gcp/env/vars
            yarn test:integration
            mv ./coverage/coverage-final.json ./coverage/integration-test.json
      - persist_to_workspace:
          root: .
          paths:
            - ./coverage/integration-test.json
      - store_artifacts:
          path: ./coverage
      - store_test_results:
          path: ./test-reports
      - notify-google-chat

  unit-test:
    executor: node-executor
    working_directory: ~/repo
    steps:
      - repository-cache
      - dependency-cache
      - run:
          name: Lint
          command: |
            set -e
            yarn lint
      - run:
          name: Unit Test
          command: |
            set -e
            yarn test:unit -w 1
            mv ./coverage/coverage-final.json ./coverage/unit-test.json
      - persist_to_workspace:
          root: .
          paths:
            - ./coverage/unit-test.json
      - store_artifacts:
          path: ./coverage
      - store_test_results:
          path: ./test-reports
      - notify-google-chat

  test-coverage:
    machine:
      image: ubuntu-2004:202010-01
    working_directory: ~/repo
    steps:
      - repository-cache
      - install-yarn
      - dependency-cache:
          linux_env: true
      - attach_workspace:
          at: ~/repo
      - run:
          name: Generate coverage report
          command: |
            set -e
            source /opt/circleci/.nvm/nvm.sh && nvm use default
            yarn nyc merge coverage .nyc_output/out.json
            yarn nyc report
      - store_artifacts:
          path: ./coverage
      - notify-google-chat

  build:
    executor: node-executor
    working_directory: ~/repo
    steps:
      - repository-cache
      - dependency-cache
      - run:
          name: Build
          command: |
            set -e
            yarn build
      - persist_to_workspace:
          root: .
          paths:
            - ./bin
      - notify-google-chat


workflows:
  test-and-deploy:
    jobs:
      - whispers-secret-scan
      - build
      - unit-test:
          requires:
            - build
      - integration-test:
          requires:
            - build
      - test-coverage:
          requires:
            - unit-test
            - integration-test
